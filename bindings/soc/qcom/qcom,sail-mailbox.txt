Qualcomm Technologies, Inc. sail mailbox binding

This binding describes Qualcomm Technologies, Inc. sail mailbox.
The sail mailbox is used for communication between APSS and SAIL.

- compatible:
	Usage: required
	Value type: <stringlist>
	Definition: must be "qcom,sail-mailbox"

- reg:
	Usage: required
	Value type: <prop-encoded-array>
	Definition: Contains TCSR and IPC register addresses used
		    for initialization of the mailbox.

- interrupt-parent:
	Usage: required
	Value type: <phandle>
	Definition: Phandle of the interrupt controller that services
		    the interrupts for this device.

- interrupts:
	Usage: required
	Value type: <prop-encoded-array>
	Definition: Array of tuples that should specify the client ID
		    and Signal ID of clients.

- mboxes:
	Usage: required
	Value type: <prop-encoded-array>
	Definition: Array of tuples with a phandle to the mbox controller,
		    the client ID and signal ID of clients.

- memory-region:
	Usage: required
	Value type: <prop-encoded-array>
	Definition: A list of tuples with a phandle to the sail-mailbox
		    and sail-mailbox-ota memory regions.

- sail-handshake-delay:
	Usage: optional
	Value type: <u32>
	Definition: An optional parameter to set a delay between sail-mailbox
		    handshake signals.

= EXAMPLE
The following example represents the SAIL mailbox node, as found in SA8775P.

	sail_mailbox: sail-mailbox@90d80000 {
		compatible = "qcom,sail-mailbox";
		reg = <0x1FFE02C 0x10>,
		      <0x17C0000C 0x04>;
		mboxes = <&ipcc_computeL1 IPCC_CLIENT_SAIL0 0x4>,
			 <&ipcc_computeL1 IPCC_CLIENT_SAIL0 0x3>,
			 <&ipcc_computeL1 IPCC_CLIENT_SAIL0 0x2>,
			 <&ipcc_computeL1 IPCC_CLIENT_SAIL0 0x6>,
			 <&ipcc_computeL1 IPCC_CLIENT_SAIL0 0X7>;
		memory-region = <&sail_mailbox_mem>,
				<&sail_ota_mem>;
		interrupt-parent = <&ipcc_computeL1>;
		interrupts = <IPCC_CLIENT_SAIL0 0x2 IRQ_TYPE_EDGE_RISING>,
			     <IPCC_CLIENT_SAIL0 0x3 IRQ_TYPE_EDGE_RISING>,
			     <IPCC_CLIENT_SAIL0 0x4 IRQ_TYPE_EDGE_RISING>,
			     <IPCC_CLIENT_SAIL0 0x5 IRQ_TYPE_EDGE_RISING>,
			     <IPCC_CLIENT_SAIL0 0x6 IRQ_TYPE_EDGE_RISING>,
			     <IPCC_CLIENT_SAIL0 0X7 IRQ_TYPE_EDGE_RISING>;
		delay = <10000>;
	};
